plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.clx'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
    // 会与JPA里面的一些类冲突，真实开发中持久层使用mybatis时可以，这里整合Demo中有JPA，所以注释掉
//    implementation 'com.github.pagehelper:pagehelper:4.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'com.github.oshi:oshi-core:6.4.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java:5.1.46'

    implementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation ('org.junit.vintage:junit-vintage-engine') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    implementation fileTree(dir:'lib',includes:['*jar'])
}

tasks.named('test') {
    useJUnitPlatform()
}
